package Dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import Bean.AccountBean;
import Exception.CustomerException;
import utility.DBUtil;

public class AdminDaoImpl implements AdminDao {

	@Override
	public String adminLogin(String Username, String Password) {
		String msg = "Invalid Username or password";
		if(username.equals(Username) && password.equals(Password)) {
			msg = "Login Successfull";
		}
		return msg;
	}

	@Override
	public String EditAccount(String AccountNumber) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String removeAccount(int AccountNumber) {
		
		String msg=null;
		try(Connection conn= DBUtil.provideConnection()) {
		 
		 PreparedStatement ps=conn.prepareStatement("delete i from customer c inner join account a on c.id=a.id where a.ACno=?;");

		 ps.setInt(1, AccountNumber);
	
	     
		int x=ps.executeUpdate();
		 
		 if(x > 0) {
			 System.out.println("Account deleted sucessfully..!");
			 System.out.println("");
		 }else {
			 System.out.println("Account Not Found");
			 
		 }
		 System.out.println("-----------------");
		}catch(SQLException e) {
			
			e.printStackTrace();
			msg=e.getMessage();
		}
		
		return msg;
		
	}

	@Override
	public AccountBean getAccount(String AccountNumber) throws CustomerException {
		// TODO Auto-generated method stub
		AccountBean acc = null;
		try(Connection conn = DBUtil.provideConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("select * from InfoCustomer c inner join Account a on c.id=a.cid where ACno = ?");
			
			ps.setString(1, AccountNumber);
			
			ResultSet res = ps.executeQuery();
			
			if(res.next()) {
				String Accountnum = res.getString("accountno");
				long balance =  res.getLong("balance");
				String customerId = res.getString("customerid");
				acc = new AccountBean();
				acc.setAccountNo(Accountnum);
				acc.setBalance(balance);
				acc.setCustomerId(customerId);
				
			}
			
			
		} catch (SQLException e) {
			throw new CustomerException(e.getMessage());
		}
		
		return acc;
	}

	@Override
	public List<AccountBean> getAllcustomer() {
		
		List<AccountBean> list = new ArrayList<>();
		try(Connection conn = DBUtil.provideConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("select * from Account");
			
			
			ResultSet res = ps.executeQuery();
			
			while(res.next()) {
				String Accountnum = res.getString("accountno");
				long balance =  res.getLong("balance");
				String customerId = res.getString("customerid");
				AccountBean acc = new AccountBean();
				acc.setAccountNo(Accountnum);
				acc.setBalance(balance);
				acc.setCustomerId(customerId);
				list.add(acc);
				
				
			}
		
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return list;


	}

	@Override
	public String addCustomer(String name, String email, String pass, String add, String mob) throws CustomerException {
		
		try(Connection conn= DBUtil.provideConnection()) {
			 
			 PreparedStatement ps=conn.prepareStatement("insert into InfoCustomer(cname,cmail,cpass,cmob,cadd) values(?,?,?,?,?)");
		     ps.setString(1,name);
		     ps.setString(2,email);
		     ps.setString(3,pass);
		     ps.setString(4,mob);
		     ps.setString(5,add);
		     
			int x=ps.executeUpdate();
		}catch(SQLException e){
			e.printStackTrace();
		}
		return null;
	}



}
